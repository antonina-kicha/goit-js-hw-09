{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAMC,SAASC,cAAc,mBAC7BC,EAAaF,SAASC,cAAc,SAC1BD,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,iBAExCC,EAAWC,iBAAiB,UAS5B,SAAqBC,GACnB,IAEqBC,EAAjBD,EAAIE,cADNC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE3BC,EAASH,MAAQI,OAAOJ,EAAMK,OAC9BF,EAASF,KAAOG,OAAOH,EAAKI,OAC5BF,EAASD,OAASE,OAAOF,EAAOG,OAEhCC,QAAQC,IAAIJ,E,IAhBdZ,EAAII,iBAAiB,SAoBrB,WACE,IAAK,IAAIa,EAAI,EAAGA,GAAKL,EAASD,OAAQM,GAAK,EAEzCC,EAAcD,EAAGL,EAASH,OAC1BG,EAASH,OAASG,EAASF,I,IArBR,IAAnBE,EAAW,CACbH,MAAO,EACPC,KAAM,EACNC,OAAQ,GAsBV,SAASO,EAAcC,EAAUV,GAC/BW,MAAMC,iBACN,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACNI,EAAQ,oBAAmCG,OAAfV,EAAS,QAAYU,OAANpB,EAAM,OAE/CkB,EAAO,mBAAkCE,OAAfV,EAAS,QAAYU,OAANpB,EAAM,M,GAC/CA,E,IAGDqB,MAAK,SAAAJ,G,OAAW5B,EAAAiC,OAAOC,QAAQN,E,IAC/BO,OAAM,SAAAN,G,OAAU7B,EAAAiC,OAAOG,QAAQP,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst btn = document.querySelector('[type=\"submit\"]');\nconst parentForm = document.querySelector('.form');\nconst delayEL = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"step\"]');\n\nparentForm.addEventListener('change', getParametr)\nbtn.addEventListener('click', arrCreatePromise)\n\n//сохраняю введенные данные\nlet parametr = {\n  delay: 0,\n  step: 0,\n  amount: 0}\n\nfunction getParametr(evt) {\n  const {\n    elements: { delay, step, amount}\n  } = evt.currentTarget;\n  parametr.delay = Number(delay.value);\n  parametr.step = Number(step.value);\n  parametr.amount = Number(amount.value);\n\n  console.log(parametr);\n}\n\n// Запуск цикла для создания массива промисов\nfunction arrCreatePromise() {\n  for (let i = 1; i <= parametr.amount; i += 1)\n  {\n    createPromise(i, parametr.delay)\n    parametr.delay += parametr.step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  event.preventDefault();\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n    resolve(`Fulfilled promis ${position} in ${delay}ms`)\n  } else {\n      reject(`Rejected promis ${position} in ${delay}ms`);\n  }}, delay)\n  })\n  promise\n    .then(resolve => Notify.success(resolve))\n    .catch(reject => Notify.failure(reject))\n  \n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$btn","document","querySelector","$ce04d3a99e08e73b$var$parentForm","addEventListener","evt","_elements","currentTarget","elements","delay","step","amount","$ce04d3a99e08e73b$var$parametr","Number","value","console","log","i","$ce04d3a99e08e73b$var$createPromise","position","event","preventDefault","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.37588566.js.map"}