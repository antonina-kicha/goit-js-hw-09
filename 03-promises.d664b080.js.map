{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAMC,SAASC,cAAc,mBAC7BC,EAAaF,SAASC,cAAc,SAC1BD,SAASC,cAAc,kBACxBD,SAASC,cAAc,iBACrBD,SAASC,cAAc,iBAExCC,EAAWC,iBAAiB,UAS5B,SAAqBC,GACnB,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBJ,EAAIK,cACRC,EAASJ,MAAQK,OAAOL,EAAMM,OAC9BF,EAASH,KAAOI,OAAOJ,EAAKK,OAC5BF,EAASF,OAASG,OAAOH,EAAOI,OAEhCC,QAAQC,IAAIJ,E,IAhBdX,EAAII,iBAAiB,SAoBrB,WACE,IAAK,IAAIY,EAAI,EAAGA,GAAKL,EAASF,OAAQO,GAAK,EAEzCC,EAAcD,EAAGL,EAASJ,OAC1BI,EAASJ,OAASI,EAASH,I,IArBR,IAAnBG,EAAW,CACbJ,MAAO,EACPC,KAAM,EACNC,OAAQ,GAsBV,SAASQ,EAAcC,EAAUX,GAC/BY,MAAMC,iBACN,MAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACNI,EAAQ,oBAAoBP,QAAeX,OAEzCmB,EAAO,mBAAmBR,QAAeX,MAAU,GACnDA,EAAM,IAGPqB,MAAKH,GAAWI,EAAA/B,GAASgC,OAAOC,QAAQN,KACxCO,OAAMN,GAAUG,EAAA/B,GAASgC,OAAOG,QAAQP,I","sources":["src/js/03-promises.js"],"sourcesContent":["// import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Notiflix from 'notiflix';\n\n\nconst btn = document.querySelector('[type=\"submit\"]');\nconst parentForm = document.querySelector('.form');\nconst delayEL = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"step\"]');\n\nparentForm.addEventListener('change', getParametr)\nbtn.addEventListener('click', arrCreatePromise)\n\n//сохраняю введенные данные\nlet parametr = {\n  delay: 0,\n  step: 0,\n  amount: 0}\n\nfunction getParametr(evt) {\n  const {\n    elements: { delay, step, amount}\n  } = evt.currentTarget;\n  parametr.delay = Number(delay.value);\n  parametr.step = Number(step.value);\n  parametr.amount = Number(amount.value);\n\n  console.log(parametr);\n}\n\n// Запуск цикла для создания массива промисов\nfunction arrCreatePromise() {\n  for (let i = 1; i <= parametr.amount; i += 1)\n  {\n    createPromise(i, parametr.delay)\n    parametr.delay += parametr.step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  event.preventDefault();\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n    resolve(`Fulfilled promis ${position} in ${delay}ms`)\n  } else {\n      reject(`Rejected promis ${position} in ${delay}ms`);\n  }}, delay)\n  })\n  promise\n    .then(resolve => Notiflix.Notify.success(resolve))\n    .catch(reject => Notiflix.Notify.failure(reject))\n  \n}\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$btn","document","querySelector","$47d4ff9957288465$var$parentForm","addEventListener","evt","elements","delay","step","amount","currentTarget","$47d4ff9957288465$var$parametr","Number","value","console","log","i","$47d4ff9957288465$var$createPromise","position","event","preventDefault","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.d664b080.js.map"}